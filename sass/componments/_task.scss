@use "../abstracts/" as *;

// main container block

.task_adding_icon {
  cursor: pointer;
  padding: 18px 32px;
  border: 2px solid $gray-300;
  background: $white;
  font-size: 24px;
  color: $gray-300;
}
.task_list_container {
  display: flex;
  flex-direction: column;
  gap: 8px;
}
.task_counter {
  @include Status;
}
// base task
.task_container {
  order: 2;
  background: $gray-200;
  border-radius: 5px;
  box-shadow: 0 4px 4px 0 $gray-300;
  .task_content,
  .task_control {
    display: none;
  }
  .task_title_status {
    display: flex;
  }
}
.task_title {
  display: flex;
  align-items: first baseline;
  padding: 24px 32px;
  gap: 16px;
  border-bottom: none;
  input[type="checkbox"] {
    flex-shrink: 0;
    width: 24px;
    height: 24px;
    appearance: none;
    background: $white;
    border-radius: 2px;
    cursor: pointer;
    &:checked {
      background: url(../image/check-solid.svg) $light-blue;
    }
  }
  input[type="text"] {
    flex-grow: 1;
    width: 100%;
    @include Paragraph;
    font-weight: 500;
    @include breakpoint($sm) {
      @include Title;
    }
    background: $gray-200;
    &::placeholder {
      color: black;
    }
  }
  button {
    padding: 0;
    background: none;
    height: 24px;
  }
  .subscribe:hover {
    i {
      font-weight: 600;
      color: $orange;
    }
  }
  .editing:hover {
    i {
      font-weight: 600;
      color: $light-blue;
    }
  }
  &_dashboard {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    gap: 16px;
    > div:nth-child(1) {
      flex-grow: 1;
      display: flex;
      align-items: center;
      gap: 16px;
      @include breakpoint($sm) {
        gap: 32px;
      }
      i {
        line-height: 24px;
        font-size: 24px;
      }
    }
    .task_title_status {
      align-items: center;
      gap: 16px;
      font-size: 16px;
      color: $gray-400;
    }
  }
}
.task_content {
  padding: 25.6px 39px 24px 36px;
  @include breakpoint($sm) {
    padding: 25.6px 78px 24px 72px;
  }
  > div {
    display: flex;
    align-items: baseline;
    gap: 8px;
    & + div {
      margin-top: 27px;
    }
  }
  p {
    @include Subtitle;
    margin-bottom: 8px;
  }
  &_subtitle {
    flex-grow: 1;
    textarea {
      width: 100%;
      padding: 8px 16px;
    }
  }
  .file_container {
    display: flex;
    align-items: center;
    gap: 24px;
    span {
      display: block;
    }
    .file_time {
      @include Remark;
    }
    .add_file {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 32px;
      width: 32px;
      background: $gray-300;
      border-radius: 3px;
      cursor: pointer;
      &:hover {
        background: $light-blue;
      }
      i {
        font-weight: bolder;
        color: $white;
      }
      input {
        display: none;
      }
    }
  }
  .date_container {
    input[type="date"],
    input[type="time"] {
      width: 162px;
      padding: 8px 0 8px 16px;
    }
  }
}
.task_control button {
  padding: 16px 0;
  display: flex;
  align-items: center;
  justify-content: center;
  flex: 1 1 50%;
  gap: 16px;
  @include Title;
  font-weight: $Regular;
  &:nth-child(1) {
    background: $white;
    color: $red;
    border-bottom-left-radius: 5px;
    &:hover {
      background: #fdfdfd;
    }
  }
  &:nth-child(2) {
    background: $light-blue;
    color: $white;
    border-bottom-right-radius: 5px;
    &:hover {
      background: #3982d7;
    }
  }
}

// task status
.task_container.new_task {
  display: none;
  z-index: 0;
}

.task_adding_container.adding {
  .task_adding_icon {
    display: none;
  }
  .task_container.new_task {
    display: block;
  }
}

.task_container.new_task,
.task_container.editing_task {
  .task_title {
    border-bottom: 3px solid $gray-300;
    &_status {
      display: none;
    }
  }
  .task_content {
    display: block;
  }
  .task_control {
    display: flex;
  }
  .editing {
    i {
      font-weight: 600;
      color: $light-blue;
    }
  }
}
.task_container.editing_task {
  input[type="checkbox"] {
    cursor: not-allowed;
  }
  .subscribe {
    cursor: not-allowed;
  }
}
.task_container.important_task {
  order: 0;
  &,
  .task_title input[type="text"] {
    background-color: $light-orange;
  }
  .subscribe {
    i {
      font-weight: 600;
      color: $orange;
    }
  }
}
.task_container.finished_task {
  order: 9000;
  &.important_task {
    order: 8000;
  }
  .task_title {
    input[type="text"] {
      text-decoration: line-through;
      color: #9b9b9b;
      &::placeholder {
        color: #9b9b9b;
      }
    }
  }
  .task_title_status {
    display: none;
  }
}
